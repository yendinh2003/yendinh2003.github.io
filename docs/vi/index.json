[{"uri":"/vi/","title":"Session Management","tags":[],"description":"","content":"Tải ảnh lên Amazon S3 bằng Amazon Lambda và API Gateway Tổng quan Tải ảnh lên Amazon S3 bằng AWS Lambda và API Gateway là một giải pháp phổ biến trong các ứng dụng web hiện đại nhằm xử lý ảnh không cần máy chủ (serverless). Trong mô hình này: Người dùng gửi ảnh (dạng Base64 hoặc file) qua API Gateway bằng phương thức POST. API Gateway chuyển dữ liệu tới AWS Lambda. Lambda xử lý dữ liệu ảnh và upload trực tiếp lên Amazon S3 – một dịch vụ lưu trữ đối tượng mạnh mẽ Nội dung Giới thiệu Các bước chuẩn bị Cấu Hình Lambda Cấu Hình API Gateway Test API trên Postman Dọn dẹp tài nguyên "},{"uri":"/vi/4-apitolambda/4.1-updateiamrole/","title":"Cấu hình API Gateway REST API kết nối Lambda","tags":[],"description":"","content":"🎯 Mục tiêu: Tạo một endpoint dạng:\nhttps://abc123.execute-api.us-east-1.amazonaws.com/prod/upload → Khi gọi API POST + gửi ảnh base64 → Lambda chạy → upload lên S3.\nCấu Hình Như ở trên bước 2.3 Tạo REST API\nChọn APIs ở thanh chức năng bên trái , sau đó chọn API mà ta đã tạo Sau đó tiếp tục cấu hình cho API đó Tại trang cấu hình cho API chúng ta tạo , truy cập vào Resources\nTiến hành Create resources\nResource name : upload\nCuối là Create reosources Sau đó sẽ trả về lại giao diện Resources và thông báo tạo thành công\nChọn /upload → Actions → Create Method → chọn POST → nhấn tick ✔️ Cấu hình:\nIntegration type: Lambda Function\nUse Lambda Proxy integration: ✅ BẬT\nLambda Region: us-east-1\nLambda Function: chọn uploadImageToS3\nNhấn Create Method Deploy API Trên thanh menu Actions → chọn Deploy API Tạo một Stage mới: Stage name: prod Nhấn Deploy Sau khi deploy xong, bạn sẽ thấy link giống như:\nhttps://co9tjkrvjc.execute-api.us-east-1.amazonaws.com/prod "},{"uri":"/vi/3-configlambda/3.1-configlambda/","title":"Cấu hình Lambda","tags":[],"description":"","content":" Truy cập vào Lambda và funtion vừa tạo Tại giao diện dịch vụ Lambda: Ở bên trái là danh sách chức năng của Lambda, chúng ta sẽ chọn Function Bạn có thể thấy danh sách function chúng ta đã tạo ở trên là \u0026ldquo;fjc-upload-image\u0026rdquo; Tiến hành click vào function đó chúng ta sẽ thấy overview về function đó Cấu hình Lambda Tại đây chính là phần mà bạn có thể thao tác các dòng lệnh code để lập trình bằng ngôn ngữ Python như đã cấu hình ở phần trước đó: Tại đây bạn sẽ tiến hành nhập code để chức năng phân tích ảnh có thể hoạt động Bạn hãy nhập code theo cấu trúc như sau: const AWS = require(\u0026#39;aws-sdk\u0026#39;);\rconst s3 = new AWS.S3();\rconst BUCKET = \u0026#39;fjc-s3bucket\u0026#39;; // \u0026lt;-- đổi tên bucket của mình\rexports.handler = async (event) =\u0026gt; {\rtry {\rconst body = JSON.parse(event.body);\rconst imageData = body.image; // base64 image\rconst buffer = Buffer.from(imageData, \u0026#39;base64\u0026#39;);\rconst fileName = `upload-${Date.now()}.jpg`;\rawait s3.putObject({\rBucket: BUCKET,\rKey: fileName,\rBody: buffer,\rContentEncoding: \u0026#39;base64\u0026#39;,\rContentType: \u0026#39;image/jpeg\u0026#39;,\r}).promise();\rreturn {\rstatusCode: 200,\rbody: JSON.stringify({ message: \u0026#39;Upload thành công\u0026#39;, key: fileName }),\r};\r} catch (error) {\rreturn {\rstatusCode: 500,\rbody: JSON.stringify({ error: error.message }),\r};\r}\r}; Sau khi nhập vào trong phần Code Source theo cấu trúc trên bạn có thể tiến hành lưu lại cách thay đổi bằng cách: Bấm button Deploy hoặc tổ hợp phím (Ctrl + Shift + U) Đợi một vài giây, hệ thống sẽ lưu lại tất cả các thay đổi của bạn và trả về thông báo lưu thành công Kết quả như các hình bên dưới: Bạn đã hoàn thành bước cấu hình cho Lambda\n"},{"uri":"/vi/1-introduce/","title":"Giới thiệu","tags":[],"description":"","content":"Amazon S3 (Simple Storage Service) là dịch vụ lưu trữ đối tượng của AWS, cho phép người dùng lưu trữ và truy xuất bất kỳ loại dữ liệu nào như hình ảnh, video, tài liệu, hay tệp dữ liệu lớn. Dữ liệu trong S3 được lưu trong các \u0026ldquo;bucket\u0026rdquo; và có thể truy cập thông qua URL hoặc API. S3 cung cấp khả năng lưu trữ gần như không giới hạn, độ bền cao, và khả năng tích hợp mạnh mẽ với các dịch vụ khác trong hệ sinh thái AWS. Đây là lựa chọn lý tưởng cho việc lưu trữ file tĩnh, sao lưu dữ liệu, hoặc phân phối nội dung qua internet.\nAmazon API Gateway là dịch vụ cho phép tạo, công bố, quản lý và bảo mật các API ở quy mô lớn. Nó đóng vai trò là cổng giao tiếp giữa client (ví dụ: trình duyệt, ứng dụng mobile) và các dịch vụ backend như AWS Lambda hoặc máy chủ EC2. Với API Gateway, bạn có thể dễ dàng xây dựng API RESTful hoặc HTTP để tiếp nhận và xử lý các yêu cầu từ phía người dùng. Dịch vụ này hỗ trợ quản lý version, hạn chế rate, xác thực, và logging, giúp quá trình triển khai API trở nên nhanh chóng, an toàn và dễ kiểm soát.\nAWS Lambda là dịch vụ điện toán không máy chủ (serverless) của AWS, cho phép bạn chạy code mà không cần quản lý máy chủ vật lý hoặc ảo. Lambda hoạt động dựa trên cơ chế kích hoạt theo sự kiện – nghĩa là khi có sự kiện xảy ra (ví dụ: một file được upload lên S3 hoặc một request từ API Gateway), Lambda sẽ tự động chạy đoạn mã mà bạn đã viết. Bạn chỉ cần tập trung vào logic xử lý, còn AWS sẽ lo toàn bộ việc triển khai, mở rộng, và vận hành. Lambda hỗ trợ nhiều ngôn ngữ như Python, Node.js, Java, và Go, rất phù hợp cho các ứng dụng nhỏ, các tác vụ tự động, và hệ thống backend linh hoạt.\n.\nVới việc sử dụng S3, bạn sẽ có được những ưu điểm sau:\nCó thể lưu hàng triệu hoặc hàng tỷ file mà không lo thiếu dung lượng. Đảm bảo độ bền dữ liệu lên đến 99.999999999% (11 số 9), rất an toàn cho việc lưu trữ dài hạn. Mỗi tệp đều có URL riêng, có thể truy cập trực tiếp qua web hoặc thông qua API. Cho phép kiểm soát quyền truy cập từng file, từng bucket bằng policy, IAM, ACL. Làm việc tốt với Lambda, CloudFront, API Gateway, Athena, v.v. Amazon S3 là một giải pháp lưu trữ đám mây mạnh mẽ, linh hoạt và đáng tin cậy, phù hợp cho cả cá nhân lẫn doanh nghiệp ở mọi quy mô. Với khả năng lưu trữ không giới hạn, độ bền dữ liệu cực cao, và tích hợp sâu với hệ sinh thái AWS, S3 là lựa chọn hàng đầu cho việc lưu trữ hình ảnh, video, tài liệu, backup, và nội dung tĩnh cho website hoặc ứng dụng. Nhờ vào cơ chế phân quyền và truy cập linh hoạt, Amazon S3 không chỉ giúp lưu trữ an toàn mà còn hỗ trợ triển khai các hệ thống hiện đại như serverless một cách dễ dàng và hiệu quả.\n"},{"uri":"/vi/2-prerequiste/2.1-creates3bucket/","title":"Tạo S3 Bucket để lưu trữ ","tags":[],"description":"","content":"Khởi tạo S3 Bucket dùng để lưu trữ hình ảnh và kết quả Truy cập vào Console và tìm dịch vụ Amazon S3\nTruy cập vào trang AWS Management Console Tiến hành đăng nhập tài khoản của bạn Sau khi đăng nhập thành công thì sẽ chuyển người dùng đến trang chính của AWS Manage Console như hình dưới : Tìm kiếm S3 trên thanh Search và chọn dịch vụ S3 Chọn Create bucket và làm theo hướng dẫn Cấu hình cho S3\nTại phần General configuration:\nAWS Region: tùy theo Region của bạn muốn sử dụng Bucket type: chọn General purpose Bucket name: nhập fjc-s3bucket Tại phần Object Ownership:\nChọn ACLs disable (recommended) Tại phần Block Public Access setting for this bucket:\nBỏ chọn Block all public access Tích chọn I acknowledge that the current settings might result in this bucket and the objects within becoming public. Giữ nguyên cấu hình mặc định ở phần dưới rồi sau đó chọn Create Bucket\nĐợi vài giây sau đó bạn sẽ được chuyển đến trang danh sách và hiển thị thông báo tạo thành công như hình dưới: "},{"uri":"/vi/2-prerequiste/","title":"Các bước chuẩn bị","tags":[],"description":"","content":"Để tìm hiểu cách tạo S3 Bucket, Lambda và API GateWay các bạn có thể tham khảo bài lab :\nGiới thiệu về Amazon S3 Làm việc với AWS Lambda Làm việc với API Gateway Để sử dụng S3 Bucket để quản lý dữ liệu nói chung và ảnh nói riêng.Trong phần này chúng ta sẽ cùng tìm hiểu cách để upload ảnh lên S3 bằng AWS Lambda và API Gateway\nNội dung Tạo S3 Bucket Tạo Lambda Function Tạo REST API trong API Gateway "},{"uri":"/vi/3-configlambda/3.2-grandpermissions3/","title":"Cấp quyền S3 cho Lambda","tags":[],"description":"","content":"Cấp quyền S3 cho Lambda Function (trong IAM Console) Cách 1: Cấp quyền toàn quyền S3 (dễ, nhanh) Trong giao diện IAM , tại thanh chức năng bên trái chọn Role\nBạn sẽ thấy Role có tên giống function mình vừa tạo\nTiến hành click vào Role\nKết quả như hình sau : Sau khi vào được giao diện của Role đó:\nỞ phần Permissions policies:\nTa tiến hành chọn tác vụ Add permission sau đó chọn Attach Policies Chúng ta sẽ thấy toàn bộ danh sách các Permissions Policies\nTrên thanh Seacrch, tiến hành tìm kiếm AmazonS3FullAccess Chọn policies đó và tiến hành Add permission 📌 Kết quả: Lambda giờ có toàn quyền với tất cả bucket S3 Cách 2 : Cấp quyền chỉ upload ảnh vào đúng 1 bucket (an toàn hơn) Quay lại với Role của function vừa tạo đó\nỞ phần Permissions policies:\nTa tiến hành chọn tác vụ Add permission sau đó chọn Create inline policy Sau khi vào giao diện Create policy\nTại phần Specify permission , chúng ta có thể đưa code vào để cấu hình\nSau đó nhấn Next\n{\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;s3:PutObject\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:s3:::fjc-s3bucket/\u0026#34;\r}\r]\r} Tiếp theo đến giao diện Review and create Policy name : LambdaS3UploadOnly Sau đó chọn Create policy Sau khi tạo xong sẽ được đưa về Role và hiển thị thông báo thành công 📌 Sau khi hoàn tất, Lambda của bạn đã có thể upload ảnh lên S3 bucket thành công.\n"},{"uri":"/vi/2-prerequiste/2.2-createlambdafunction/","title":"Tạo Lambda Function","tags":[],"description":"","content":" Trên thanh tìm kiếm, hãy nhập Lambda sau đó chọn dịch vụ Lambda Sau khi truy cập vào dịch vụ thực hiện Create Lambda Function Trong giao diện Create function\nFunction name : fjc-upload-image Runtime : chọn Node.js 18x Những phần còn lại giữ nguyên theo cấu hình mặc định Sau đó nhấn Create Function Sau khi tạo thành công sẽ được chuyển về function vừa tạo và hiển thị thông báo tạo thành công "},{"uri":"/vi/3-configlambda/","title":"Cấu hình Lambda","tags":[],"description":"","content":"Trong bước này, chúng ta sẽ tiến hành cấu hình cho Lambda và cấp quyền sử dụng S3 cho Lambda\nĐể giúp cho Lambda hoạt động trơn tru và linh hoạt\nNội dung 3.1. Cấu hình Lambda 3.2. Cấp quyền S3 cho Lambda\n"},{"uri":"/vi/2-prerequiste/2.3-createrestapi/","title":"Tạo Rest API trong API Gateway","tags":[],"description":"","content":"Cấu hình API Gateway cho chức năng phân tích ảnh Tìm kiếm và truy cập dịch vụ của API Gateway\nTại thành tìm kiếm , hãy nhập API Gateway và truy cập vào dịch vụ đó Sau khi truy cập được dịch vụ thực hiện tác vụ Create an API Cấu hình API Gateway\nTại trang API type, bạn có thể thấy có nhiều loại API sử dụng cho từng mục đích khác nhau như : HTTP API, REST API , WebSocket API,\u0026hellip;\u0026hellip;. Trong phần này , chúng ta sẽ cùng sử dụng REST API Trong phần choose a API type\nBạn hãy chọn REST API Bấm vào button Build Kết quả như sau: Khi vào được giao diện Create REST API API details : chọn New API API name : ImageUploadAPI API endpoint type : Regional Sau đó ấn chọn buuton Create API Sau đó sẽ được điều hướng về API vừa tạo và gửi thông báo tạo thành công "},{"uri":"/vi/4-apitolambda/","title":"Cấu hình API Gateway","tags":[],"description":"","content":"Cấu hình API Gateway là bước quan trọng để quản lý và bảo vệ luồng truy cập đến các dịch vụ backend như AWS Lambda, EC2, hoặc các hệ thống khác. Việc cấu hình giúp chúng ta:\nKiểm soát truy cập: chỉ cho phép người dùng hoặc ứng dụng hợp lệ gọi API.\nChuyển đổi định dạng dữ liệu: từ HTTP request thành input phù hợp cho Lambda hoặc dịch vụ backend.\nBảo mật: hỗ trợ xác thực (API key, JWT, IAM), giới hạn tốc độ gọi (throttling), chống DDoS.\nQuản lý phiên bản và monitoring: dễ dàng theo dõi, phân tích log và triển khai nhiều phiên bản API.\nTóm lại, cấu hình API Gateway giúp đảm bảo API hoạt động an toàn, hiệu quả và dễ quản lý trong môi trường sản xuất.\nNội Dung 4.1 Cấu hình API Gateway REST API kết nối Lambda\n"},{"uri":"/vi/5-testapi/","title":"Test API trên PostMan","tags":[],"description":"","content":"TEST API UPLOAD ẢNH Base64 TRÊN POSTMAN Trong đề tài này chúng ta sẽ sử dụng Base64,công dụng của Base64 trong đề tài upload ảnh lên S3 bằng Lambda và API Gateway là giúp truyền dữ liệu ảnh qua mạng (HTTP) một cách an toàn và dễ xử lý trong môi trường text-only như JSON hoặc Lambda\nBase64 là gì? Base64 là một cách mã hóa nhị phân thành văn bản (chuỗi ký tự), giúp gửi các file (ảnh, âm thanh, v.v.) qua các hệ thống chỉ hỗ trợ văn bản như:\nJSON HTML HTTP request body Ưu điểm khi dùng Base64\nDễ nhúng vào JSON (\u0026ldquo;body\u0026rdquo;: \u0026ldquo;{ imageBase64: \u0026lsquo;\u0026hellip;\u0026rsquo;}\u0026rdquo;) Không cần cấu hình phức tạp như multipart/form-data Có thể test dễ dàng trong Lambda console Trong đề tài này, Base64 giúp mã hóa ảnh thành chuỗi văn bản để gửi qua API Gateway một cách dễ dàng, và Lambda có thể giải mã lại để upload lên S3. Đây là giải pháp đơn giản, hiệu quả để truyền ảnh trong môi trường không hỗ trợ file trực tiếp như Lambda Console hay API Gateway.\nTest API trên PostMan Như ở trên ta đã gọi được URL là: https://co9tjkrvjc.execute-api.us-east-1.amazonaws.com/prod/uploads Tiếp theo cùng tiến hành trên PostMan Method : POST URL : API vừa tạo Header : \u0026quot;\u0026quot; Content-Type: application/json \u0026quot;\u0026quot; Body : {\u0026#34;image\u0026#34;: \u0026#34;/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxISEh...\u0026#34;} Đường link image là mình convert sang base64 Sau đó nhấn Send và kết quả sẽ được hiển thị bên dưới : Kiểm tra kết quả trên S3 Sau khi Post man thông báo upload thành công thì chúng ta qua S3 kiểm tra kết quả ảnh đã lên chưa Như trong hình ảnh là đã thành công Nếu muốn xem ảnh chi tiết, hãy chọn ảnh bạn muốn xem , khi giao diện mở ra chọn Open Khi đó sẽ được chuyển sang trang mới và ảnh đã được hiển thị Vậy là bạn đã thực hiện upload ảnh lên S3 thành công\n"},{"uri":"/vi/6-cleanup/","title":"Dọn dẹp tài nguyên  ","tags":[],"description":"","content":"Chúng ta sẽ tiến hành các bước sau để xóa các tài nguyên chúng ta đã tạo trong bài thực hành này.\nXóa S3 bucket Truy cập giao diện quản trị S3. Chúng ta sẽ thấy giao diện S3 Bucket và tên của bucket vừa tạo 2. Truy cập giao diện quản trị dịch vụ S3\nClick chọn S3 bucket chúng ta đã tạo cho bài thực hành. ( Ví dụ : fjc-s3bucket ) Click Empty. Điền permanently delete, sau đó click Empty để tiến hành xóa object trong bucket. Click Exit. Sau khi xóa hết object trong bucket, click Delete Điền tên S3 bucket, sau đó click Delete bucket để tiến hành xóa S3 bucket. Xóa Lambda Function Truy cập vào giao diện quản trị dịch vụ Labmda\nClick Function. Chọn function chúng ta tạo ở trên, Ví dụ : fjc-upload-image Click Action. Chọn Delete Sau đó nhập confirm Xóa Rest API Truy cập vào giao diện quản trị dịch vụ API Gateway\nClick vào Api ở thanh bên Sau đó click vào APIs chúng ta đã tạo ở trên Click Delete và nhập \u0026ldquo;confirm\u0026rdquo; Vậy là chúng ta đã hoàn thành việc dọn dẹp tài nguyên\n"},{"uri":"/vi/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"/vi/tags/","title":"Tags","tags":[],"description":"","content":""}]